"A contract's event"
interface Event {
	"Internal ID used for indexation"
	id: ID!
}

"A 721 transaction event"
type Erc721Transaction implements Event @entity {
	"Internal ID used for indexation"
	id: ID!

	"Seller account"
	from: Account

	"Buyer account"
	to: Account
}

"A 721 holder account"
type Account @entity {
	"Internal ID used for indexation"
	id: ID!

	"Account evm address"
	address: Bytes

	"Owned tokens"
	tokens: [Erc721Token!]! @derivedFrom(field: "owner")

	"Approved tokens"
	approved: [Erc721Token!]! @derivedFrom(field: "approval")
	
	"Transactions sent by this account"
	sent: [Erc721Transaction!] @derivedFrom(field: "from")
 
	"Transactions recieved by this account"
	recieved: [Erc721Transaction!] @derivedFrom(field: "to")
}

interface Erc721Token {
	"Internal ID used for indexation"
	id: ID!

	"Token's current owner"
	owner: Account!

	"Current approval"
	approval: Account

	"Current burned status"
	burned: Boolean
}

type JoyToken implements Erc721Token @entity{
	"Internal ID used for indexation"
	id: ID!

	"Token's current owner"
	owner: Account!

	"Current approval"
	approval: Account

	"Current burned status"
	burned: Boolean
}